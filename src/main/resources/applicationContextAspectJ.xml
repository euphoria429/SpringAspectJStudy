<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
    <!--1 目标类-->
    <bean id="helloImpl" class="cn.hcx.service.HelloImpl"></bean>
    <!--2切面-->
    <bean id="MyAspectJ" class="cn.hcx.Aspect.MyAspectJ"></bean>
    <!--3 aop编程-->
    <aop:config>
        <!--配置切面-->
        <aop:aspect ref="MyAspectJ">
            <!--3.1 配置切入点，通知最后增强哪些方法-->
            <aop:pointcut id="myPointCut" expression="execution(* cn.hcx.service.*.*(..))"/>
            <!--3.2 关联通知Advice和切入点pointCut-->
            <!--3.2.1 前置通知-->
            <aop:before method="myBefore" pointcut-ref="myPointCut"></aop:before>
            <!--3.2.2 后置通知，在方法返回之后执行，就可以获得返回值
            returning：指定形参名，通过该形参访问目标方法抛出的异常-->
            <aop:after-returning method="myAfterReturning" pointcut-ref="myPointCut" returning="joinPoint"></aop:after-returning>
            <!--3.2.3 环绕通知-->
            <aop:around method="myAround" pointcut-ref="myPointCut"></aop:around>
            <!--3.2.4 抛出通知：用于处理程序发生异常-->
            <!--注意：如果程序没有异常，将不会执行增强-->
            <!--throwing属性：用于设置通知第二个参数的名称，类型Throwable-->
            <aop:after-throwing method="myAfterThrowing" pointcut-ref="myPointCut" throwing="e"></aop:after-throwing>
            <!--3.2.5 最终通知：无论程序发生任何事情，都将执行-->
            <aop:after method="myAfter" pointcut-ref="myPointCut"></aop:after>
        </aop:aspect>
    </aop:config>
</beans>
